{
  "name": "curl-cmd",
  "version": "0.0.0",
  "description": "Generate a curl command line argument list from an http request object",
  "author": {
    "name": "Dave Eddy",
    "email": "dave@daveeddy.com",
    "url": "http://www.daveeddy.com"
  },
  "main": "./curl-cmd.js",
  "scripts": {
    "test": "for f in test/*; do echo \"$f\"; node \"$f\" || exit 1; echo; done; echo Passed; exit 0"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/bahamas10/node-curl-cmd.git"
  },
  "license": "MIT",
  "dependencies": {
    "shell-escape": "0.0.0"
  },
  "readme": "curl-cmd\n========\n\nGenerate a curl command line argument list from an http request object\n\nInstall\n-------\n\n    npm install curl-cmd\n\nExample\n-------\n\nTaken from the [Node.JS](http://nodejs.org) example for an HTTP get request\n\n``` js\nvar http = require('http');\nvar curl = require('curl-cmd');\n\nvar options = {\n  hostname: 'ifconfig.me',\n  port: 80,\n  path: '/ip',\n  method: 'GET'\n};\n\nconsole.log('=> %s', curl.cmd(options));\n\nhttp.request(options, function(res) {\n  console.log('STATUS: ' + res.statusCode);\n  console.log('HEADERS: ' + JSON.stringify(res.headers));\n  res.setEncoding('utf8');\n  res.on('data', function (chunk) {\n    console.log('BODY: ' + chunk);\n  });\n}).end();\n```\n\nThe line `curl.cmd(options)` is the interesting part as that will generate\nthe curl command seen in the output\n\n```\n=> curl -X GET http://ifconfig.me:80/ip\nSTATUS: 200\nHEADERS: {\"date\":\"Thu, 06 Jun 2013 16:56:30 GMT\",\"server\":\"Apache\",\"vary\":\"Accept-Encoding\",\"connection\":\"close\",\"transfer-encoding\":\"chunked\",\"content-type\":\"text/plain\"}\nBODY: 8.8.8.8\n```\n\n### Simple Example\n\n``` js\n> var curl = require('curl-cmd')\nundefined\n\n> curl.cmd('http://www.daveeddy.com/something')\n'curl -X GET http://www.daveeddy.com/something'\n\n> curl.cmd({host: 'daveeddy.com', port: 8080, method: 'DELETE', path: '/data/something'})\n'curl -X DELETE http://daveeddy.com:8080/data/something'\n\n> curl.cmd({host: 'daveeddy.com', port: 8080, method: 'DELETE', path: '/data/something', headers: { 'User-Agent': 'Internet Explorer'} })\n'curl -X DELETE -H \\'User-Agent: Internet Explorer\\' http://daveeddy.com:8080/data/something'\n\n> curl.cmd({host: 'daveeddy.com', port: 8080, method: 'DELETE', path: '/data/something', headers: { 'User-Agent': 'Internet Explorer'}, auth: 'dave:secret' })\n'curl -X DELETE -u dave:secret -H \\'User-Agent: Internet Explorer\\' http://daveeddy.com:8080/data/something'\n\n> curl.cmd({host: 'daveeddy.com', port: 8080, method: 'PUT', path: '/data/something', headers: { 'User-Agent': 'Internet Explorer'}, auth: 'dave:secret' }, {ssl: true, verbose: true})\n'curl -X PUT -u dave:secret -H \\'User-Agent: Internet Explorer\\' -v https://daveeddy.com:8080/data/something'\n```\nUsage\n-----\n\nPass in a URI as a string, a `url.parsed()` object, or an object suitable for\nmaking an HTTP request as the first argument to get the curl command.\n\n### `curl.cmd(options, curlopts={})`\n\nThis returns a stringified curl command suitable for running on the shell\n\n### `curl.args(options, curlopts={})`\n\nSame as above, except returns an array of separate arguments to use for the curl command\n\n### `curlopts`\n\nThe optional second argument is used to pass options to curl\n\n- `curlopts.ssl`: set to `true` to use HTTPS instead of HTTP, defaults to `false`\n- `curlopts.verbose`: set to `true` to add `-v` to the curl command, defaults to `false`\n- `curlopts.headers`: set to `true` to add `-i` to the curl command, defaults to `false`\n- `curlopts.options`: an optional array of arguments to add to the curl command, defaults to `[]`\n\nLicense\n-------\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/bahamas10/node-curl-cmd/issues"
  },
  "homepage": "https://github.com/bahamas10/node-curl-cmd",
  "_id": "curl-cmd@0.0.0",
  "_from": "curl-cmd@"
}
